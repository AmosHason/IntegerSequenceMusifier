import musical_scales
import numpy
from midiutil.MidiFile import MIDIFile


CHROMATIC_SCALE_NOTES = tuple([x.name for x in musical_scales.scale('C', 'chromatic')][:-1])
RHYTMIC_BASE = 8
REMOVE_SEQUENTIAL_DUPLICATE_NOTES = True
STARTING_NOTE = 'D#'
SCALE_TYPE = 'ukranian dorian'  # Choose from list: https://pypi.org/project/musical-scales/
NUM_OCTAVES = 6
COMPRESSION_RATIO = 0.995
WINDOW_SIZE = 4
TONAL_BASE = len(CHROMATIC_SCALE_NOTES)
TEMPO = 540
VOLUME = 100


def musify(summit_points, name='output'):
    midi_numbers, durations = get_midi_numbers_and_durations(summit_points)
    write_midi_file(midi_numbers, durations, name)


def get_midi_numbers_and_durations(summit_points):
    relevant_notes = get_relevant_notes_according_to_scale()
    summit_heights = convert_summit_points_to_list_of_relative_heights_with_minimal_value_0_ordered_by_x_value(summit_points)
    durations = create_note_durations_using_1d_sobel_filter_with_minimal_threshold_0(summit_heights)
    durations = compress_values_by_max(durations, RHYTMIC_BASE) + 1
    summit_heights = summit_heights[2:-2]
    notes_as_integers = compress_values_by_max(summit_heights, len(relevant_notes) - 1)
    notes_as_integers, durations = average_over_window(notes_as_integers, durations)
    if REMOVE_SEQUENTIAL_DUPLICATE_NOTES:
        notes_as_integers, durations = remove_sequential_duplicate_notes_by_averaging_their_durations(notes_as_integers, durations)
    notes_as_integers_according_to_scale = [(relevant_notes[int(x)].name, relevant_notes[int(x)].octave) for x in notes_as_integers]
    midi_numbers = [note_to_midi_number(*x) for x in notes_as_integers_according_to_scale]

    return midi_numbers, durations


def get_relevant_notes_according_to_scale():
    relevant_notes = musical_scales.scale(STARTING_NOTE, SCALE_TYPE, octaves=NUM_OCTAVES)
    octave_offset = relevant_notes[0].octave
    for note in relevant_notes:
        note.octave = note.octave - octave_offset + 1

    return relevant_notes


def convert_summit_points_to_list_of_relative_heights_with_minimal_value_0_ordered_by_x_value(summit_points):
    notes_as_integers = [y[1] for y in sorted(summit_points, key=lambda x: x[0])]

    return [max(notes_as_integers) - x for x in notes_as_integers]


def create_note_durations_using_1d_sobel_filter_with_minimal_threshold_0(summit_heights):
    return numpy.abs(numpy.convolve(summit_heights, (-1, 0, 1), mode='same')[2:-2])


def compress_values_by_max(seq, max_):
    cur = numpy.array(seq)

    while round(numpy.max(cur)) > max_:
        cur = COMPRESSION_RATIO * cur

    return numpy.rint(cur)


def average_over_window(notes_as_integers_, durations_):
    modified_notes_as_integers = []
    modified_durations = []

    for w_start in range(0, len(notes_as_integers_), WINDOW_SIZE):
        w_end = min(w_start + WINDOW_SIZE, len(notes_as_integers_))
        modified_notes_as_integers.append(round(sum(notes_as_integers_[w_start:w_end]) / (w_end - w_start)))
        modified_durations.append(round(sum(durations_[w_start:w_end]) / (w_end - w_start)))

    return modified_notes_as_integers, modified_durations


def remove_sequential_duplicate_notes_by_averaging_their_durations(notes_as_integers_, durations_):
    modified_notes_as_integers = []
    modified_durations = []

    k = 0
    dup_durations = []
    prev = -1

    while k <= len(notes_as_integers_):
        if k == len(notes_as_integers_) or notes_as_integers_[k] != prev:
            if prev != -1:
                modified_notes_as_integers.append(prev)
                modified_durations.append(round(sum(dup_durations) / len(dup_durations)))

            if k < len(notes_as_integers_):
                prev = notes_as_integers_[k]
                dup_durations = [durations_[k]]

        else:
            dup_durations.append(durations_[k])

        k += 1

    return modified_notes_as_integers, modified_durations


def note_to_midi_number(note, octave):
    return TONAL_BASE + TONAL_BASE * octave + CHROMATIC_SCALE_NOTES.index(note)


def write_midi_file(midi_numbers, durations, name):
    midi = MIDIFile()
    midi.addTrackName(0, 0, '')
    midi.addTempo(0, 0, TEMPO)

    time = 0
    for i in range(len(midi_numbers)):
        midi.addNote(0, 0, midi_numbers[i], time, int(durations[i]), VOLUME)
        time = time + int(durations[i])

    with open(f'{name} {STARTING_NOTE} {SCALE_TYPE}.mid', 'wb') as f:
        midi.writeFile(f)

musify([[815, 62], [814, 63], [813, 63], [812, 63], [811, 64], [810, 64], [809, 64], [808, 65], [807, 65], [806, 65], [805, 66], [804, 66], [803, 66], [802, 67], [801, 67], [800, 68], [799, 68], [798, 69], [797, 69], [796, 70], [795, 71], [794, 71], [793, 71], [792, 72], [791, 72], [790, 72], [789, 72], [788, 72], [787, 72], [786, 72], [785, 72], [784, 72], [783, 72], [782, 72], [781, 73], [780, 73], [779, 73], [778, 74], [777, 74], [776, 74], [775, 75], [774, 75], [773, 75], [772, 75], [771, 75], [770, 75], [769, 75], [768, 75], [767, 75], [766, 76], [765, 76], [764, 76], [763, 76], [762, 76], [761, 76], [760, 76], [759, 76], [758, 76], [757, 77], [756, 77], [755, 77], [754, 77], [753, 77], [752, 77], [751, 78], [750, 78], [749, 78], [748, 78], [747, 78], [746, 78], [745, 77], [744, 77], [743, 77], [742, 77], [741, 77], [740, 77], [739, 78], [738, 78], [737, 78], [736, 78], [735, 78], [734, 79], [733, 79], [732, 79], [731, 79], [730, 79], [729, 79], [728, 79], [727, 79], [726, 79], [725, 79], [724, 79], [723, 79], [722, 79], [721, 79], [720, 79], [719, 79], [718, 79], [717, 79], [716, 79], [715, 79], [714, 79], [713, 80], [712, 80], [711, 80], [710, 80], [709, 80], [708, 80], [707, 80], [706, 80], [705, 81], [704, 81], [703, 81], [702, 81], [701, 81], [700, 82], [699, 82], [698, 82], [697, 83], [696, 83], [695, 83], [694, 84], [693, 84], [692, 84], [691, 85], [690, 85], [689, 85], [688, 86], [687, 86], [686, 86], [685, 86], [684, 87], [683, 87], [682, 87], [681, 87], [680, 87], [679, 87], [678, 87], [677, 87], [676, 88], [675, 88], [674, 88], [673, 88], [672, 89], [671, 89], [670, 89], [669, 89], [668, 90], [667, 90], [666, 90], [665, 90], [664, 90], [663, 90], [662, 90], [661, 90], [660, 90], [659, 90], [658, 90], [657, 90], [656, 90], [655, 90], [654, 89], [653, 89], [652, 88], [651, 88], [650, 87], [649, 86], [648, 86], [647, 85], [646, 85], [645, 84], [644, 84], [643, 83], [642, 83], [641, 82], [640, 82], [639, 82], [638, 82], [637, 82], [636, 82], [635, 82], [634, 82], [633, 82], [632, 82], [631, 82], [630, 82], [629, 83], [628, 83], [627, 83], [626, 83], [625, 83], [624, 83], [623, 84], [622, 84], [621, 84], [620, 84], [619, 84], [618, 84], [617, 84], [616, 84], [615, 84], [614, 84], [613, 84], [612, 84], [611, 84], [610, 85], [609, 85], [608, 85], [607, 86], [606, 86], [605, 87], [604, 87], [603, 88], [602, 88], [601, 88], [600, 89], [599, 89], [598, 89], [597, 89], [596, 89], [595, 90], [594, 90], [593, 90], [592, 90], [591, 90], [590, 90], [589, 90], [588, 90], [587, 90], [586, 90], [585, 90], [584, 90], [583, 90], [582, 90], [581, 89], [580, 89], [579, 89], [578, 89], [577, 89], [576, 89], [575, 89], [574, 89], [573, 89], [572, 88], [571, 88], [570, 88], [569, 87], [568, 87], [567, 86], [566, 86], [565, 85], [564, 85], [563, 85], [562, 85], [561, 85], [560, 85], [559, 85], [558, 85], [557, 86], [556, 86], [555, 86], [554, 87], [553, 87], [552, 88], [551, 88], [550, 88], [549, 88], [548, 89], [547, 89], [546, 89], [545, 90], [544, 90], [543, 91], [542, 91], [541, 92], [540, 93], [539, 93], [538, 94], [537, 94], [536, 94], [535, 94], [534, 95], [533, 95], [532, 95], [531, 95], [530, 95], [529, 95], [528, 96], [527, 96], [526, 96], [525, 97], [524, 97], [523, 97], [522, 98], [521, 98], [520, 98], [519, 98], [518, 99], [517, 99], [516, 99], [515, 100], [514, 100], [513, 101], [512, 101], [511, 102], [510, 102], [509, 102], [508, 103], [507, 103], [506, 103], [505, 103], [504, 103], [503, 104], [502, 104], [501, 104], [500, 104], [499, 103], [498, 103], [497, 103], [496, 103], [495, 103], [494, 102], [493, 102], [492, 102], [491, 102], [490, 102], [489, 102], [488, 102], [487, 102], [486, 102], [485, 102], [484, 102], [483, 102], [482, 101], [481, 101], [480, 101], [479, 101], [478, 101], [477, 100], [476, 100], [475, 99], [474, 99], [473, 98], [472, 98], [471, 98], [470, 97], [469, 97], [468, 97], [467, 97], [466, 97], [465, 97], [464, 97], [463, 96], [462, 96], [461, 96], [460, 95], [459, 95], [458, 95], [457, 94], [456, 94], [455, 94], [454, 94], [453, 94], [452, 94], [451, 94], [450, 94], [449, 94], [448, 94], [447, 94], [446, 93], [445, 93], [444, 93], [443, 93], [442, 92], [441, 92], [440, 91], [439, 91], [438, 90], [437, 89], [436, 89], [435, 88], [434, 88], [433, 87], [432, 87], [431, 87], [430, 86], [429, 86], [428, 86], [427, 85], [426, 85], [425, 85], [424, 85], [423, 85], [422, 85], [421, 86], [420, 86], [419, 86], [418, 86], [417, 87], [416, 87], [415, 87], [414, 88], [413, 88], [412, 89], [411, 89], [410, 89], [409, 90], [408, 90], [407, 90], [406, 90], [405, 91], [404, 91], [403, 91], [402, 91], [401, 92], [400, 92], [399, 93], [398, 93], [397, 94], [396, 95], [395, 95], [394, 96], [393, 96], [392, 96], [391, 96], [390, 95], [389, 95], [388, 95], [387, 94], [386, 94], [385, 94], [384, 94], [383, 93], [382, 93], [381, 93], [380, 93], [379, 93], [378, 93], [377, 93], [376, 93], [375, 94], [374, 94], [373, 94], [372, 94], [371, 94], [370, 94], [369, 94], [368, 94], [367, 94], [366, 94], [365, 95], [364, 95], [363, 96], [362, 96], [361, 97], [360, 97], [359, 97], [358, 97], [357, 97], [356, 97], [355, 96], [354, 95], [353, 95], [352, 94], [351, 93], [350, 92], [349, 92], [348, 91], [347, 91], [346, 90], [345, 90], [344, 89], [343, 89], [342, 89], [341, 88], [340, 88], [339, 88], [338, 87], [337, 87], [336, 87], [335, 87], [334, 87], [333, 87], [332, 87], [331, 87], [330, 87], [329, 87], [328, 87], [327, 87], [326, 87], [325, 87], [324, 86], [323, 86], [322, 86], [321, 85], [320, 85], [319, 84], [318, 84], [317, 83], [316, 83], [315, 83], [314, 83], [313, 82], [312, 82], [311, 82], [310, 82], [309, 82], [308, 82], [307, 82], [306, 82], [305, 82], [304, 82], [303, 82], [302, 83], [301, 83], [300, 83], [299, 84], [298, 84], [297, 84], [296, 85], [295, 85], [294, 85], [293, 85], [292, 84], [291, 84], [290, 84], [289, 83], [288, 83], [287, 82], [286, 81], [285, 81], [284, 80], [283, 80], [282, 80], [281, 79], [280, 79], [279, 79], [278, 79], [277, 79], [276, 80], [275, 80], [274, 80], [273, 81], [272, 81], [271, 82], [270, 82], [269, 82], [268, 82], [267, 82], [266, 82], [265, 82], [264, 81], [263, 81], [262, 81], [261, 80], [260, 80], [259, 80], [258, 80], [257, 79], [256, 79], [255, 79], [254, 79], [253, 79], [252, 79], [251, 79], [250, 79], [249, 79], [248, 79], [247, 78], [246, 78], [245, 78], [244, 78], [243, 78], [242, 77], [241, 77], [240, 77], [239, 77], [238, 76], [237, 76], [236, 76], [235, 76], [234, 76], [233, 76], [232, 76], [231, 76], [230, 76], [229, 76], [228, 76], [227, 76], [226, 76], [225, 76], [224, 76], [223, 76], [222, 77], [221, 77], [220, 76], [219, 76], [218, 76], [217, 76], [216, 77], [215, 77], [214, 77], [213, 77], [212, 78], [211, 78], [210, 78], [209, 79], [208, 79], [207, 79], [206, 79], [205, 79], [204, 79], [203, 79], [202, 79], [201, 79], [200, 79], [199, 78], [198, 78], [197, 78], [196, 78], [195, 78], [194, 78], [193, 77], [192, 77], [191, 76], [190, 76], [189, 76], [188, 75], [187, 75], [186, 75], [185, 74], [184, 74], [183, 74], [182, 73], [181, 73], [180, 73], [179, 73], [178, 73], [177, 73], [176, 72], [175, 72], [174, 72], [173, 72], [172, 72], [171, 72], [170, 72], [169, 72], [168, 72], [167, 72], [166, 72], [165, 72], [164, 72], [163, 72], [162, 72], [161, 72], [160, 71], [159, 71], [158, 71], [157, 70], [156, 70], [155, 70], [154, 70], [153, 69], [152, 69], [151, 68], [150, 68], [149, 67], [148, 67], [147, 66], [146, 66], [145, 65], [144, 65], [143, 65], [142, 65], [141, 65], [140, 65], [139, 66], [138, 66], [137, 66], [136, 66], [135, 66], [134, 66], [133, 66], [132, 66], [131, 66], [130, 66], [129, 66], [128, 66], [127, 66], [126, 66], [125, 66], [124, 66], [123, 66], [122, 66], [121, 66], [120, 67], [119, 67], [118, 67], [117, 68], [116, 68], [115, 69], [114, 69], [113, 69], [112, 70], [111, 70], [110, 71], [109, 71], [108, 72], [107, 72], [106, 72], [105, 73], [104, 73], [103, 73], [102, 73], [101, 73], [100, 73], [99, 73], [98, 72], [97, 72], [96, 72], [95, 72], [94, 71], [93, 71], [92, 71], [91, 71], [90, 72], [89, 72], [88, 72], [87, 72], [86, 73], [85, 73], [84, 74], [83, 75], [82, 76], [81, 76], [80, 77], [79, 78], [78, 79], [77, 80], [76, 80], [75, 81], [74, 82], [73, 82], [72, 83], [71, 83], [70, 83], [69, 83], [68, 83], [67, 83], [66, 83], [65, 83], [64, 83], [63, 83], [62, 82], [61, 82], [60, 82], [59, 82], [58, 81], [57, 81], [56, 81], [55, 81], [54, 81], [53, 81], [52, 81], [51, 81], [50, 82], [49, 82], [48, 82], [47, 82], [46, 83], [45, 83], [44, 84], [43, 84], [42, 85], [41, 85], [40, 85], [39, 86], [38, 86], [37, 86], [36, 86], [35, 86], [34, 86], [33, 86], [32, 87], [31, 87], [30, 87], [29, 87], [28, 87], [27, 86], [26, 86], [25, 86], [24, 86], [23, 86], [22, 86], [21, 85], [20, 85], [19, 85], [18, 84], [17, 83], [16, 83], [15, 82], [14, 81], [13, 81], [12, 80], [11, 79], [10, 79], [9, 78], [8, 78], [7, 77], [6, 77], [5, 76], [4, 76], [3, 75], [2, 75], [1, 74], [0, 74], [816, 62], [817, 62], [818, 62], [819, 62], [820, 62], [821, 62], [822, 62], [823, 62], [824, 62], [825, 62], [826, 62], [827, 62], [828, 62], [829, 62], [830, 62], [831, 62], [832, 62], [833, 62], [834, 62], [835, 62], [836, 62], [837, 62], [838, 62], [839, 62], [840, 63], [841, 63], [842, 63], [843, 64], [844, 64], [845, 64], [846, 65], [847, 65], [848, 66], [849, 66], [850, 66], [851, 66], [852, 66], [853, 67], [854, 67], [855, 67], [856, 67], [857, 68], [858, 68], [859, 68], [860, 68], [861, 69], [862, 69], [863, 69], [864, 69], [865, 69], [866, 69], [867, 69], [868, 69], [869, 69], [870, 69], [871, 69], [872, 69], [873, 70], [874, 70], [875, 70], [876, 70], [877, 70], [878, 70], [879, 70], [880, 70], [881, 70], [882, 70], [883, 70], [884, 70], [885, 70], [886, 70], [887, 70], [888, 70], [889, 70], [890, 70], [891, 70], [892, 69], [893, 69], [894, 69], [895, 69], [896, 69], [897, 69], [898, 69], [899, 69], [900, 69], [901, 69], [902, 69], [903, 70], [904, 70], [905, 70], [906, 70], [907, 70], [908, 70], [909, 71], [910, 71], [911, 71], [912, 71], [913, 71], [914, 72], [915, 72], [916, 72], [917, 72], [918, 72], [919, 72], [920, 72], [921, 72], [922, 72], [923, 72], [924, 72], [925, 72], [926, 72], [927, 72], [928, 72], [929, 72], [930, 72], [931, 72], [932, 72], [933, 72], [934, 72], [935, 72], [936, 72], [937, 72], [938, 72], [939, 72], [940, 72], [941, 72], [942, 72], [943, 72], [944, 72], [945, 72], [946, 72], [947, 72], [948, 72], [949, 72], [950, 72], [951, 72], [952, 72], [953, 72], [954, 72], [955, 72], [956, 72], [957, 72], [958, 72], [959, 72], [960, 72], [961, 73], [962, 73], [963, 73], [964, 73], [965, 73], [966, 74], [967, 74], [968, 74], [969, 74], [970, 74], [971, 74], [972, 74], [973, 74], [974, 75], [975, 75], [976, 75], [977, 74], [978, 74], [979, 74], [980, 74], [981, 74], [982, 73], [983, 73], [984, 73], [985, 73], [986, 73], [987, 72], [988, 72], [989, 72], [990, 72], [991, 72], [992, 72], [993, 71], [994, 71], [995, 71], [996, 71], [997, 71], [998, 71], [999, 71], [1000, 71], [1001, 71], [1002, 71], [1003, 71], [1004, 71], [1005, 70], [1006, 70], [1007, 70], [1008, 70], [1009, 71], [1010, 71], [1011, 71], [1012, 71], [1013, 72], [1014, 72], [1015, 72], [1016, 73], [1017, 73], [1018, 73], [1019, 74], [1020, 74], [1021, 74], [1022, 75], [1023, 75]])  # noqa
